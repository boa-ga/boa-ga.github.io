{"version":3,"sources":["webpack:///src/app/games/game-munchkin/game-munchkin.component.ts","webpack:///src/app/games/game-munchkin/game-munchkin.component.html","webpack:///src/app/games/game-munchkin/game-munchkin.module.ts","webpack:///src/app/games/game-munchkin/game-munchkin.routes.ts","webpack:///src/app/games/game-munchkin/game-munchkin.service.ts","webpack:///src/app/games/game-munchkin/munchkin-board/munchkin-board.component.ts","webpack:///src/app/games/game-munchkin/munchkin-board/munchkin-board.component.html","webpack:///src/app/games/game-munchkin/munchkin-players/munchkin-players.component.ts","webpack:///src/app/games/game-munchkin/munchkin-players/munchkin-players.component.html"],"names":["GameMunchkinComponent","route","socketService","gameMunchkinService","chatService","userSettingsService","tearDown$","initGame","initChat","gameId","emit","next","complete","params","pipe","joinGame","listenAnyOf","getGameById","game","subscribe","userSettings$","settings","myUserId","id","myName","name","listen","action","sendMessage","payload","from","text","myMessages$","sendMessageAction","selector","templateUrl","styleUrls","providers","GameMunchkinModule","forChild","imports","declarations","exports","gameMunchkinRoutes","path","component","GameMunchkinService","httpClient","configurationService","apiBaseUrl","configuration","apiUrl","post","get","MunchkinBoardComponent","MunchkinPlayersComponent"],"mappings":"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","file":"game-munchkin-game-munchkin-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ChatSendMessageAction,\n  GameMunchkinDto,\n  GameUserJoinedAction,\n  GameUserLeftAction,\n  LeaveGameAction,\n  UserDataChangedAction,\n} from '@boa-ga/api-interfaces';\nimport { Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { SocketService } from '../../services/socket.service';\nimport { UserSettingsService } from '../../services/user-settings.service';\nimport { ChatService } from '../../shared/chat/chat.service';\nimport { GameMunchkinService } from './game-munchkin.service';\n\n@Component({\n  selector: 'bg-game-munchkin',\n  templateUrl: './game-munchkin.component.html',\n  styleUrls: ['./game-munchkin.component.scss'],\n  providers: [ChatService],\n})\nexport class GameMunchkinComponent implements OnInit, OnDestroy {\n  gameId: string;\n  game: GameMunchkinDto;\n  myUserId: string;\n\n  private tearDown$ = new Subject();\n\n  constructor(\n    private route: ActivatedRoute,\n    private socketService: SocketService,\n    private gameMunchkinService: GameMunchkinService,\n    private chatService: ChatService,\n    private userSettingsService: UserSettingsService,\n  ) {}\n\n  ngOnInit() {\n    this.initGame();\n\n    this.initChat();\n  }\n\n  ngOnDestroy() {\n    if (this.gameId) {\n      this.socketService.emit(new LeaveGameAction(this.gameId));\n    }\n\n    this.tearDown$.next();\n    this.tearDown$.complete();\n  }\n\n  private initGame() {\n    this.route.params\n      .pipe(\n        tap((params) => (this.gameId = params.gameId)),\n        switchMap(() => this.gameMunchkinService.joinGame(this.gameId)),\n        switchMap(() =>\n          this.socketService\n            .listenAnyOf(\n              GameUserJoinedAction,\n              GameUserLeftAction,\n              UserDataChangedAction,\n            )\n            .pipe(\n              startWith(-1),\n              switchMap(() =>\n                this.gameMunchkinService.getGameById(this.gameId),\n              ),\n              tap((game) => (this.game = game)),\n            ),\n        ),\n        takeUntil(this.tearDown$),\n      )\n      .subscribe();\n  }\n\n  private initChat() {\n    this.userSettingsService.userSettings$\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((settings) => {\n        this.myUserId = settings.id;\n        this.chatService.myName = settings.name;\n      });\n\n    this.socketService\n      .listen(ChatSendMessageAction)\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((action) =>\n        this.chatService.sendMessage(action.payload.from, action.payload.text),\n      );\n\n    this.chatService.myMessages$\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((text) => {\n        const sendMessageAction = new ChatSendMessageAction({\n          gameId: this.gameId,\n          from: this.chatService.myName,\n          text,\n        });\n\n        this.socketService.emit(sendMessageAction);\n      });\n  }\n}\n","<bg-munchkin-players\n  fxFlex=\"250px\"\n  [players]=\"game && game.players\"\n  [myUserId]=\"myUserId\"\n></bg-munchkin-players>\n<div fxFlex fxLayout=\"column\">\n  <bg-munchkin-board fxFlex></bg-munchkin-board>\n  <bg-chat fxFlex=\"0 0 300px\"></bg-chat>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ChatModule } from '../../shared/chat/chat.module';\nimport { SharedUIModule } from '../../shared/shared-ui.module';\nimport { GameMunchkinComponent } from './game-munchkin.component';\nimport { gameMunchkinRoutes } from './game-munchkin.routes';\nimport { GameMunchkinService } from './game-munchkin.service';\nimport { MunchkinBoardComponent } from './munchkin-board/munchkin-board.component';\nimport { MunchkinPlayersComponent } from './munchkin-players/munchkin-players.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(gameMunchkinRoutes),\n    SharedUIModule,\n    ChatModule,\n  ],\n  declarations: [\n    GameMunchkinComponent,\n    MunchkinBoardComponent,\n    MunchkinPlayersComponent,\n  ],\n  providers: [GameMunchkinService],\n  exports: [GameMunchkinComponent],\n})\nexport class GameMunchkinModule {}\n","import { Routes } from '@angular/router';\n\nimport { GameMunchkinComponent } from './game-munchkin.component';\n\nexport const gameMunchkinRoutes: Routes = [\n  {\n    path: ':gameId',\n    component: GameMunchkinComponent,\n  },\n];\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GameMunchkinDto } from '@boa-ga/api-interfaces';\nimport { Observable } from 'rxjs';\n\nimport { ConfigurationService } from '../../services/configuration.service';\n\n@Injectable()\nexport class GameMunchkinService {\n  private apiBaseUrl = `${this.configurationService.configuration.apiUrl}games/munchkin`;\n\n  constructor(\n    private httpClient: HttpClient,\n    private configurationService: ConfigurationService,\n  ) {}\n\n  joinGame(gameId: string): Observable<void> {\n    return this.httpClient.post<void>(\n      `${this.apiBaseUrl}/${gameId}/users`,\n      null,\n    );\n  }\n\n  getGameById(gameId: string): Observable<GameMunchkinDto> {\n    return this.httpClient.get<GameMunchkinDto>(`${this.apiBaseUrl}/${gameId}`);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bg-munchkin-board',\n  templateUrl: './munchkin-board.component.html',\n  styleUrls: ['./munchkin-board.component.scss'],\n})\nexport class MunchkinBoardComponent {}\n","Board\n","import { Component, Input } from '@angular/core';\nimport { MunchkinPlayerDto } from '@boa-ga/api-interfaces';\n\n@Component({\n  selector: 'bg-munchkin-players',\n  templateUrl: './munchkin-players.component.html',\n  styleUrls: ['./munchkin-players.component.scss'],\n})\nexport class MunchkinPlayersComponent {\n  @Input()\n  players: MunchkinPlayerDto;\n\n  @Input()\n  myUserId: string;\n}\n","<mat-card\n  *ngFor=\"let player of players\"\n  class=\"player-card\"\n  [class.my-card]=\"player.id === myUserId\"\n>\n  <mat-card-header>\n    <mat-icon\n      mat-card-avatar\n      svgIcon=\"icon-user\"\n      class=\"player-card__avatar\"\n    ></mat-icon>\n    <mat-card-title class=\"player-card__title\">\n      {{ player.name }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"player.id === myUserId\">\n      {{ 'Me' | translate }}\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Level' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">{{ player.level }}</span>\n      </mat-list-item>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Cards in hands' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">\n          {{ player.cardIdsInHands.length }}\n        </span>\n      </mat-list-item>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Cards on table' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">\n          {{ player.cardIdsOnTable.length }}\n        </span>\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n</mat-card>\n"]}