{"version":3,"sources":["./src/app/games/game-munchkin/game-munchkin.component.ts","./src/app/games/game-munchkin/game-munchkin.component.html","./src/app/games/game-munchkin/game-munchkin.module.ts","./src/app/games/game-munchkin/game-munchkin.routes.ts","./src/app/games/game-munchkin/game-munchkin.service.ts","./src/app/games/game-munchkin/munchkin-board/munchkin-board.component.ts","./src/app/games/game-munchkin/munchkin-board/munchkin-board.component.html","./src/app/games/game-munchkin/munchkin-players/munchkin-players.component.ts","./src/app/games/game-munchkin/munchkin-players/munchkin-players.component.html"],"names":[],"mappings":"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","file":"game-munchkin-game-munchkin-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ChatSendMessageAction,\n  GameMunchkinDto,\n  GameUserJoinedAction,\n  GameUserLeftAction,\n  LeaveGameAction,\n  UserDataChangedAction,\n} from '@boa-ga/api-interfaces';\nimport { Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { SocketService } from '../../services/socket.service';\nimport { UserSettingsService } from '../../services/user-settings.service';\nimport { ChatService } from '../../shared/chat/chat.service';\nimport { GameMunchkinService } from './game-munchkin.service';\n\n@Component({\n  selector: 'bg-game-munchkin',\n  templateUrl: './game-munchkin.component.html',\n  styleUrls: ['./game-munchkin.component.scss'],\n  providers: [ChatService],\n})\nexport class GameMunchkinComponent implements OnInit, OnDestroy {\n  gameId: string;\n  game: GameMunchkinDto;\n  myUserId: string;\n\n  private tearDown$ = new Subject();\n\n  constructor(\n    private route: ActivatedRoute,\n    private socketService: SocketService,\n    private gameMunchkinService: GameMunchkinService,\n    private chatService: ChatService,\n    private userSettingsService: UserSettingsService,\n  ) {}\n\n  ngOnInit() {\n    this.initGame();\n\n    this.initChat();\n  }\n\n  ngOnDestroy() {\n    if (this.gameId) {\n      this.socketService.emit(new LeaveGameAction(this.gameId));\n    }\n\n    this.tearDown$.next();\n    this.tearDown$.complete();\n  }\n\n  private initGame() {\n    this.route.params\n      .pipe(\n        tap((params) => (this.gameId = params.gameId)),\n        switchMap(() => this.gameMunchkinService.joinGame(this.gameId)),\n        switchMap(() =>\n          this.socketService\n            .listenAnyOf(\n              GameUserJoinedAction,\n              GameUserLeftAction,\n              UserDataChangedAction,\n            )\n            .pipe(\n              startWith(-1),\n              switchMap(() =>\n                this.gameMunchkinService.getGameById(this.gameId),\n              ),\n              tap((game) => (this.game = game)),\n            ),\n        ),\n        takeUntil(this.tearDown$),\n      )\n      .subscribe();\n  }\n\n  private initChat() {\n    this.userSettingsService.userSettings$\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((settings) => {\n        this.myUserId = settings.id;\n        this.chatService.myName = settings.name;\n      });\n\n    this.socketService\n      .listen(ChatSendMessageAction)\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((action) =>\n        this.chatService.sendMessage(action.payload.from, action.payload.text),\n      );\n\n    this.chatService.myMessages$\n      .pipe(takeUntil(this.tearDown$))\n      .subscribe((text) => {\n        const sendMessageAction = new ChatSendMessageAction({\n          gameId: this.gameId,\n          from: this.chatService.myName,\n          text,\n        });\n\n        this.socketService.emit(sendMessageAction);\n      });\n  }\n}\n","<bg-munchkin-players\n  fxFlex=\"250px\"\n  [players]=\"game && game.players\"\n  [myUserId]=\"myUserId\"\n></bg-munchkin-players>\n<div fxFlex fxLayout=\"column\">\n  <bg-munchkin-board fxFlex></bg-munchkin-board>\n  <bg-chat fxFlex=\"0 0 300px\"></bg-chat>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ChatModule } from '../../shared/chat/chat.module';\nimport { SharedUIModule } from '../../shared/shared-ui.module';\nimport { GameMunchkinComponent } from './game-munchkin.component';\nimport { gameMunchkinRoutes } from './game-munchkin.routes';\nimport { GameMunchkinService } from './game-munchkin.service';\nimport { MunchkinBoardComponent } from './munchkin-board/munchkin-board.component';\nimport { MunchkinPlayersComponent } from './munchkin-players/munchkin-players.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(gameMunchkinRoutes),\n    SharedUIModule,\n    ChatModule,\n  ],\n  declarations: [\n    GameMunchkinComponent,\n    MunchkinBoardComponent,\n    MunchkinPlayersComponent,\n  ],\n  providers: [GameMunchkinService],\n  exports: [GameMunchkinComponent],\n})\nexport class GameMunchkinModule {}\n","import { Routes } from '@angular/router';\n\nimport { GameMunchkinComponent } from './game-munchkin.component';\n\nexport const gameMunchkinRoutes: Routes = [\n  {\n    path: ':gameId',\n    component: GameMunchkinComponent,\n  },\n];\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GameMunchkinDto } from '@boa-ga/api-interfaces';\nimport { Observable } from 'rxjs';\n\nimport { ConfigurationService } from '../../services/configuration.service';\n\n@Injectable()\nexport class GameMunchkinService {\n  private apiBaseUrl = `${this.configurationService.configuration.apiUrl}games/munchkin`;\n\n  constructor(\n    private httpClient: HttpClient,\n    private configurationService: ConfigurationService,\n  ) {}\n\n  joinGame(gameId: string): Observable<void> {\n    return this.httpClient.post<void>(\n      `${this.apiBaseUrl}/${gameId}/users`,\n      null,\n    );\n  }\n\n  getGameById(gameId: string): Observable<GameMunchkinDto> {\n    return this.httpClient.get<GameMunchkinDto>(`${this.apiBaseUrl}/${gameId}`);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bg-munchkin-board',\n  templateUrl: './munchkin-board.component.html',\n  styleUrls: ['./munchkin-board.component.scss'],\n})\nexport class MunchkinBoardComponent {}\n","Board\n","import { Component, Input } from '@angular/core';\nimport { MunchkinPlayerDto } from '@boa-ga/api-interfaces';\n\n@Component({\n  selector: 'bg-munchkin-players',\n  templateUrl: './munchkin-players.component.html',\n  styleUrls: ['./munchkin-players.component.scss'],\n})\nexport class MunchkinPlayersComponent {\n  @Input()\n  players: MunchkinPlayerDto;\n\n  @Input()\n  myUserId: string;\n}\n","<mat-card\n  *ngFor=\"let player of players\"\n  class=\"player-card\"\n  [class.my-card]=\"player.id === myUserId\"\n>\n  <mat-card-header>\n    <mat-icon\n      mat-card-avatar\n      svgIcon=\"icon-user\"\n      class=\"player-card__avatar\"\n    ></mat-icon>\n    <mat-card-title class=\"player-card__title\">\n      {{ player.name }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"player.id === myUserId\">\n      {{ 'Me' | translate }}\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Level' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">{{ player.level }}</span>\n      </mat-list-item>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Cards in hands' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">\n          {{ player.cardIdsInHands.length }}\n        </span>\n      </mat-list-item>\n      <mat-list-item>\n        <span fxFlex class=\"player-card__property-name\">\n          {{ 'Cards on table' | translate }}\n        </span>\n        <span class=\"player-card__property-value\">\n          {{ player.cardIdsOnTable.length }}\n        </span>\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n</mat-card>\n"],"sourceRoot":"webpack:///"}